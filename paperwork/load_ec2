RDS = pokelookup.cg60yrfxwjb1.us-east-1.rds.amazonaws.com

1. create EC2
Ubuntu Server 18.04 LTS (HVM), SSD Volume Type
type = t2.micro
allow all https and http traffic from all users
allow ssh from myip

ssh in and run 

Run Comands below:

sudo apt update -y

sudo apt upgrade -y

sudo apt install mysql
sudo apt install mysql-server // testing 
sudo apt install php
sudo apt install httpd
sudo apt install git

sudo service httpd start

cd /var/www/html
git clone ***https link***




RDS name = PokemanPokedex


comands to access DB from EC2:

mysql -h **pokelookup.cg60yrfxwjb1.us-east-1.rds.amazonaws.com*** -P 3306 -u **username** -p

enter password!!

create schema pokedex;

exit
mysql -h **pokelookup.cg60yrfxwjb1.us-east-1.rds.amazonaws.com*** -P 3306 -u **username** -p  pokedex > **sql file*







****************************************************************************************************************************

Lambda function creation:
1- Create an RDS setupd the database and the sql pokemon file

2- create the lambda function, change handler name to main.handler, set execution role to service-role/lambda_rds
3- import the node.js zipfile with the code created:

var mysql = require('mysql');
var config = require('./config.json');
const AWS = require('aws-sdk');

var pool  = mysql.createPool({
  host     : config.DBhost,
  user     : config.DBuser,
  password : config.DBpassword,
  database : config.DBname
});

exports.handler =  (event, context, callback) => {
  //prevent timeout from waiting event loop
  context.callbackWaitsForEmptyEventLoop = false;

  pool.getConnection(function(err, connection) {
     var messageID = event.Records[0].Sns.MessageId;
    var message = event.Records[0].Sns.Message;
    
    sql ="INSERT INTO Messages (messageID, message) VALUES ?";
    var values = [[messageID, message]];
    
    
    // Use the connection
    connection.query(sql, [values], function (error, result) {
      // And done with the connection.
      connection.release();
      // Handle error after the release.
      if (error) callback(error, null);
      else callback(null, result.affectedRows);
    });
  });
};

in config.json change the host name to the rds endpoint,and change db name to PokemonPokedex;

scroll up and create a test for SNS

4- create SNS topic and subscribe the lambda to the topic.
5- done now you can publish a message and the lambda function will be triggered by the event and inserts the messageID
 and the message into the table created inside our database;



